name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-size:
    name: Check PR Size
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR stats
        id: stats
        run: |
          FILES_CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l)
          LINES_ADDED=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{s+=$1} END {print s}')
          LINES_REMOVED=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{s+=$2} END {print s}')
          TOTAL_CHANGES=$((LINES_ADDED + LINES_REMOVED))

          echo "files=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "added=$LINES_ADDED" >> $GITHUB_OUTPUT
          echo "removed=$LINES_REMOVED" >> $GITHUB_OUTPUT
          echo "total=$TOTAL_CHANGES" >> $GITHUB_OUTPUT

      - name: Comment PR size
        uses: actions/github-script@v7
        with:
          script: |
            const files = parseInt('${{ steps.stats.outputs.files }}');
            const added = parseInt('${{ steps.stats.outputs.added }}');
            const removed = parseInt('${{ steps.stats.outputs.removed }}');
            const total = parseInt('${{ steps.stats.outputs.total }}');

            let sizeEmoji = '🟢';
            let sizeLabel = 'Small';
            let recommendation = '✅ 이상적인 PR 크기입니다!';

            if (total > 500) {
              sizeEmoji = '🔴';
              sizeLabel = 'Huge';
              recommendation = '⚠️ PR이 너무 큽니다. 여러 개로 나누는 것을 고려해주세요.';
            } else if (total > 300) {
              sizeEmoji = '🟠';
              sizeLabel = 'Large';
              recommendation = '⚠️ PR 크기가 큽니다. 가능하면 나누는 것을 고려해주세요.';
            } else if (total > 100) {
              sizeEmoji = '🟡';
              sizeLabel = 'Medium';
              recommendation = '✅ 적절한 PR 크기입니다.';
            }

            const body = `## 📊 PR 통계

            ${sizeEmoji} **크기**: ${sizeLabel}

            - 📁 변경된 파일: **${files}개**
            - ➕ 추가된 줄: **${added}줄**
            - ➖ 삭제된 줄: **${removed}줄**
            - 📝 총 변경: **${total}줄**

            ${recommendation}

            ---
            <sub>💡 **팁**: 작은 PR일수록 리뷰가 빠르고 병합 확률이 높습니다!</sub>
            `;

            // 기존 bot 코멘트 찾기
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('📊 PR 통계')
            );

            if (botComment) {
              // 기존 코멘트 업데이트
              await github.rest.issues.updateComment({
                comment_id: botComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            } else {
              // 새 코멘트 생성
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }

      - name: Fail if too large
        if: steps.stats.outputs.total > 1000
        run: |
          echo "::error::PR is too large (> 1000 lines changed). Please split into smaller PRs."
          exit 1

  file-size-check:
    name: Check File Sizes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for large files
        run: |
          # 1MB 이상 파일 찾기
          LARGE_FILES=$(find . -type f -size +1M -not -path "./.git/*" -not -path "./node_modules/*")

          if [ -n "$LARGE_FILES" ]; then
            echo "::warning::Found large files (> 1MB):"
            echo "$LARGE_FILES"
            echo "::warning::Consider using Git LFS for large binary files"
          fi

  conventional-commits:
    name: Check Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlintrc.json
